@page "/"
@using System.Device.Gpio

<PageTitle>Home</PageTitle>

<h1>GPIO Test</h1>

<h4 class="mb-5">State @(IsOn ? "On" : "Off")</h4>

<button class="btn btn-primary" @onmousedown="TurnOnLed" @onmouseup="TurnOffLed" @ontouchstart="TurnOnLed" @ontouchend="TurnOffLed">
    Hold to Turn LED ON
</button>

@code {
    bool IsOn { get; set; }
    GpioController? GpioController { get; set; } 
    int LedPin { get; set; }

    protected override Task OnInitializedAsync()
    {
        LedPin = 17; // GPIO pin for the LED
        try
        {
            GpioController = new GpioController();
            GpioController.OpenPin(LedPin, PinMode.Output);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }

        return base.OnInitializedAsync();
    }

    private void TurnOnLed()
    {
        IsOn = true;
        Console.WriteLine("Button pressed - Turning LED ON");
        GpioController?.Write(LedPin, PinValue.High); // Turn LED on
        StateHasChanged();
    }

    private void TurnOffLed()
    {
        IsOn = false;
        Console.WriteLine("Button released - Turning LED OFF");
        GpioController?.Write(LedPin, PinValue.Low); // Turn LED off
        StateHasChanged();
    }
}